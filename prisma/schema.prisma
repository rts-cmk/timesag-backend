datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
    engineType      = "library"
}

model User {
    id        String     @id @default(cuid())
    email     String     @unique
    name      String?
    password  String     @unique
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    role      String     @default("user")
    taskUser  TaskUser[]
}

model Customer {
    id            String    @id @default(cuid())
    company       String
    email         String    @unique
    phone         String
    address1      String
    address2      String?
    postalCode    String
    city          String
    contactperson String?
    contactemail  String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    projects      Project[]
}

model Project {
    id          String   @id @default(cuid())
    name        String
    description String?
    customerId  String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    customer    Customer @relation(fields: [customerId], references: [id])
    tasks       Task[]
}

model Task {
    id          String     @id @default(cuid())
    title       String
    description String?
    projectId   String
    status      String     @default("venter")
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    project     Project    @relation(fields: [projectId], references: [id])
    taskUser    TaskUser[]
}

model TaskUser {
    id         String   @id @default(cuid())
    taskId     String
    userId     String
    assignedAt DateTime @default(now())
    estimate   Float // Estimated time for this user on this task
    date       DateTime // Date of time entry
    timeSpent  Int? // Actual time spent
    comment    String?
    task       Task     @relation(fields: [taskId], references: [id])
    user       User     @relation(fields: [userId], references: [id])
}
